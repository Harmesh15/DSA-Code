


function check(nums) {
   
   const n = nums.length;
   const result = new Array(n).fill(-1);
   const stack = [];  
    

    for (let i = 0; i < 2 * n; i++) {
        const curr = nums[i % n];
        
    
        while (stack.length && nums[stack[stack.length - 1]] < curr) {
            result[stack.pop()] = curr;
        }
        
        
        if (i < n) {
            stack.push(i);
        }
    }
    
    return result;
};



// Example 1:

// Input: nums = [1,2,1]
// Output: [2,-1,2]
// Explanation: The first 1's next greater number is 2; 
// The number 2 can't find next greater number. 
// The second 1's next greater number needs to search circularly, which is also 2.
// Example 2:

// Input: nums = [1,2,3,4,3]
// Output: [2,3,4,-1,

let nums = [1,2,3,4,3];
let res = check(nums);
console.log(res);



